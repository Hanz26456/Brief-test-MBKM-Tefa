name: Laravel CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: event_management_test
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.4'
        extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv, imagick, mysql, pdo_mysql
        coverage: xdebug

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress --no-interaction

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Generate application key
      run: php artisan key:generate

    - name: Set up environment variables for testing
      run: |
        echo "APP_ENV=testing" >> .env
        echo "APP_DEBUG=true" >> .env
        echo "DB_CONNECTION=mysql" >> .env
        echo "DB_HOST=127.0.0.1" >> .env
        echo "DB_PORT=3306" >> .env
        echo "DB_DATABASE=event_management_test" >> .env
        echo "DB_USERNAME=root" >> .env
        echo "DB_PASSWORD=password" >> .env
        echo "CACHE_DRIVER=array" >> .env
        echo "QUEUE_CONNECTION=sync" >> .env
        echo "SESSION_DRIVER=array" >> .env
        echo "MAIL_MAILER=array" >> .env

    - name: Generate JWT secret
      run: php artisan jwt:secret --force

    - name: Directory Permissions
      run: chmod -R 755 storage bootstrap/cache

    - name: Clear Config Cache
      run: php artisan config:clear

    - name: Clear Cache
      run: php artisan cache:clear

    - name: Clear View Cache
      run: php artisan view:clear

    - name: Wait for MySQL
      run: |
        while ! mysqladmin ping -h"127.0.0.1" -P"3306" -u"root" -p"password" --silent; do
          sleep 1
        done

    - name: Run migrations
      run: php artisan migrate --force

    - name: Run seeders
      run: php artisan db:seed --force

    - name: Execute tests (Unit and Feature tests) via PHPUnit
      run: vendor/bin/phpunit --coverage-text --coverage-clover=coverage.clover

    - name: Upload coverage reports to Codecov (optional)
      if: success()
      run: |
        if [ -f coverage.clover ]; then
          bash <(curl -s https://codecov.io/bash) -f coverage.clover
        fi